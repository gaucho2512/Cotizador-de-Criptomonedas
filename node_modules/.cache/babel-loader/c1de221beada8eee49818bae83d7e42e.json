{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Juan/Desktop/Cotizador-de-Criptomonedas/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Juan/Desktop/Cotizador-de-Criptomonedas/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/Juan/Desktop/Cotizador-de-Criptomonedas/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"C:\\\\Users\\\\Juan\\\\Desktop\\\\Cotizador-de-Criptomonedas\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from'react';import styled from'@emotion/styled';import useSelectMonedas from'../hooks/useSelectMonedas';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Form=styled.form(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: flex-start;\\n\"])));var InputSubmit=styled.input(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    background-color: #9497ff;\\n    border: none;\\n    width: 300px;\\n    color: #fff;\\n    font-weight: 700;\\n    padding: 10px;\\n    cursor: pointer;\\n    transition: all 0.5s;\\n    margin-top: 30px ;\\n\\n    &:hover {\\n        background-color: #e1e2ff;\\n        color: #000\\n    }\\n\"])));var Formulario=function Formulario(_ref){var setMonedas=_ref.setMonedas;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cripto=_useState2[0],setCripto=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){var consultarApi=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,respuesta,resultado,arrayCriptos;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=15&tsym=USD\";_context.next=3;return fetch(url);case 3:respuesta=_context.sent;_context.next=6;return respuesta.json();case 6:resultado=_context.sent;arrayCriptos=resultado.Data.map(function(cripto){var objeto={id:cripto.CoinInfo.Name,nombre:cripto.CoinInfo.FullName};return objeto;});setCripto(arrayCriptos);case 9:case\"end\":return _context.stop();}}},_callee);}));return function consultarApi(){return _ref2.apply(this,arguments);};}();consultarApi();},[]);var monedass=[{id:'USD',nombre:'Dolar de EE.UU'},{id:'MXM',nombre:'Peso mexicano'},{id:'EUR',nombre:'Euro'},{id:'ARS',nombre:'Peso argentino'}];var _useSelectMonedas=useSelectMonedas('Elige tu moneda',monedass),_useSelectMonedas2=_slicedToArray(_useSelectMonedas,2),monedas=_useSelectMonedas2[0],SelectMonedas=_useSelectMonedas2[1];var _useSelectMonedas3=useSelectMonedas('Elige tu criptomoneda',cripto),_useSelectMonedas4=_slicedToArray(_useSelectMonedas3,2),criptoMoneda=_useSelectMonedas4[0],SelectCriptoMoneda=_useSelectMonedas4[1];var handleSubmit=function handleSubmit(e){e.preventDefault();if([monedass,criptoMoneda].includes(\"\")){setError(true);return;}setError(false);setMonedas({monedas:monedas,criptoMoneda:criptoMoneda});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(SelectMonedas,{}),/*#__PURE__*/_jsx(SelectCriptoMoneda,{}),monedas,/*#__PURE__*/_jsx(InputSubmit,{type:\"submit\",value:\"Cotizar\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:\"Todos los campos son obligatorios\"})]})});};export default Formulario;","map":{"version":3,"sources":["C:/Users/Juan/Desktop/Cotizador-de-Criptomonedas/src/components/Formulario.jsx"],"names":["useEffect","useState","styled","useSelectMonedas","Form","form","InputSubmit","input","Formulario","setMonedas","cripto","setCripto","error","setError","consultarApi","url","fetch","respuesta","json","resultado","arrayCriptos","Data","map","objeto","id","CoinInfo","Name","nombre","FullName","monedass","monedas","SelectMonedas","criptoMoneda","SelectCriptoMoneda","handleSubmit","e","preventDefault","includes"],"mappings":"ylBAAA,OAAQA,SAAR,CAAoBC,QAApB,KAAmC,OAAnC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,C,6IAIA,GAAMC,CAAAA,IAAI,CAAGF,MAAM,CAACG,IAAV,gLAAV,CAOA,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,KAAV,kWAAjB,CAiBA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,CAEjC,cAA6BR,QAAQ,CAAC,EAAD,CAArC,wCAAOS,MAAP,eAAgBC,SAAhB,eACA,eAA2BV,QAAQ,CAAC,KAAD,CAAnC,yCAAOW,KAAP,eAAeC,QAAf,eAGAb,SAAS,CAAC,UAAM,CAEZ,GAAMc,CAAAA,YAAY,2FAAG,4KACTC,GADS,CACH,yEADG,uBAESC,CAAAA,KAAK,CAACD,GAAD,CAFd,QAETE,SAFS,qCAGSA,CAAAA,SAAS,CAACC,IAAV,EAHT,QAGTC,SAHS,eAKTC,YALS,CAKMD,SAAS,CAACE,IAAV,CAAeC,GAAf,CAAoB,SAACZ,MAAD,CAAY,CAE/C,GAAMa,CAAAA,MAAM,CAAG,CACXC,EAAE,CAAEd,MAAM,CAACe,QAAP,CAAgBC,IADT,CAEXC,MAAM,CAAEjB,MAAM,CAACe,QAAP,CAAgBG,QAFb,CAAf,CAIA,MAAOL,CAAAA,MAAP,CACL,CAPoB,CALN,CAafZ,SAAS,CAACS,YAAD,CAAT,CAbe,sDAAH,kBAAZN,CAAAA,YAAY,2CAAlB,CAgBIA,YAAY,GACnB,CAnBQ,CAmBN,EAnBM,CAAT,CAsBA,GAAMe,CAAAA,QAAQ,CAAG,CACb,CAAEL,EAAE,CAAE,KAAN,CAAcG,MAAM,CAAE,gBAAtB,CADa,CAEb,CAAEH,EAAE,CAAE,KAAN,CAAcG,MAAM,CAAE,eAAtB,CAFa,CAGb,CAAEH,EAAE,CAAE,KAAN,CAAcG,MAAM,CAAE,MAAtB,CAHa,CAIb,CAAEH,EAAE,CAAE,KAAN,CAAcG,MAAM,CAAE,gBAAtB,CAJa,CAAjB,CAOA,sBAAmCxB,gBAAgB,CAAC,iBAAD,CAAoB0B,QAApB,CAAnD,wDAAQC,OAAR,uBAAiBC,aAAjB,uBACA,uBAA6C5B,gBAAgB,CAAC,uBAAD,CAA0BO,MAA1B,CAA7D,yDAAQsB,YAAR,uBAAsBC,kBAAtB,uBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAG,CAACP,QAAD,CAAYG,YAAZ,EAA0BK,QAA1B,CAAmC,EAAnC,CAAH,CAA2C,CACvCxB,QAAQ,CAAC,IAAD,CAAR,CACA,OACH,CAEDA,QAAQ,CAAC,KAAD,CAAR,CACAJ,UAAU,CAAC,CACPqB,OAAO,CAAPA,OADO,CAEPE,YAAY,CAAZA,YAFO,CAAD,CAAV,CAID,CAZD,CAeF,mBACI,sCAEG,MAAC,IAAD,EACC,QAAQ,CAAEE,YADX,wBAGO,KAAC,aAAD,IAHP,cAIO,KAAC,kBAAD,IAJP,CAMQJ,OANR,cAQO,KAAC,WAAD,EACC,IAAI,CAAC,QADN,CAEC,KAAK,CAAE,SAFR,EARP,CAaElB,KAAK,eAAI,UAAG,SAAS,CAAC,OAAb,+CAbX,GAFH,EADJ,CAuBD,CA5ED,CA8EA,cAAeJ,CAAAA,UAAf","sourcesContent":["import {useEffect , useState} from 'react'\r\nimport styled from '@emotion/styled';\r\nimport useSelectMonedas from '../hooks/useSelectMonedas';\r\n\r\n\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n`\r\n\r\nconst InputSubmit = styled.input`\r\n    background-color: #9497ff;\r\n    border: none;\r\n    width: 300px;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    margin-top: 30px ;\r\n\r\n    &:hover {\r\n        background-color: #e1e2ff;\r\n        color: #000\r\n    }\r\n`\r\n\r\nconst Formulario = ({setMonedas}) => {\r\n\r\n    const [cripto , setCripto] = useState([])\r\n    const [error , setError] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        const consultarApi = async() => {\r\n              const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=15&tsym=USD\"\r\n              const respuesta = await fetch(url)\r\n              const resultado = await respuesta.json()\r\n             \r\n              const arrayCriptos = resultado.Data.map( (cripto) => {\r\n\r\n                    const objeto = {\r\n                        id: cripto.CoinInfo.Name,\r\n                        nombre: cripto.CoinInfo.FullName\r\n                    }\r\n                    return objeto\r\n              })\r\n              setCripto(arrayCriptos)\r\n             \r\n            }\r\n            consultarApi()\r\n    }, [])\r\n    \r\n\r\n    const monedass = [\r\n        { id: 'USD' , nombre: 'Dolar de EE.UU'},\r\n        { id: 'MXM' , nombre: 'Peso mexicano'},\r\n        { id: 'EUR' , nombre: 'Euro'},\r\n        { id: 'ARS' , nombre: 'Peso argentino'},\r\n    ]\r\n   \r\n    const [ monedas, SelectMonedas ] = useSelectMonedas('Elige tu moneda', monedass)\r\n    const [ criptoMoneda, SelectCriptoMoneda ] = useSelectMonedas('Elige tu criptomoneda', cripto)\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      if([monedass , criptoMoneda].includes(\"\")) {\r\n          setError(true)\r\n          return;\r\n      }\r\n\r\n      setError(false)\r\n      setMonedas({\r\n          monedas, \r\n          criptoMoneda\r\n      })\r\n    }\r\n   \r\n   \r\n  return (\r\n      <>\r\n        \r\n         <Form\r\n          onSubmit={handleSubmit}\r\n         >\r\n                <SelectMonedas />\r\n                <SelectCriptoMoneda />\r\n\r\n                {monedas}\r\n              \r\n                <InputSubmit\r\n                 type=\"submit\"\r\n                 value= \"Cotizar\"\r\n                  />\r\n\r\n         { error && <p className='error'>Todos los campos son obligatorios</p>}\r\n\r\n         </Form>\r\n      \r\n      \r\n      </>\r\n  )\r\n}\r\n\r\nexport default Formulario"]},"metadata":{},"sourceType":"module"}