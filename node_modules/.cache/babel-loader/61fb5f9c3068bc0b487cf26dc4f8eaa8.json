{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Documents\\\\REACT\\\\Curso React Juan de la Torre Valdez\\\\cotizador-cripto\\\\src\\\\components\\\\Formulario.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport useSelectMonedas from '../hooks/useSelectMonedas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n`;\n_c = Form;\nconst InputSubmit = styled.input`\n    background-color: #9497ff;\n    border: none;\n    width: 300px;\n    color: #fff;\n    font-weight: 700;\n    padding: 10px;\n    cursor: pointer;\n    transition: all 0.5s;\n    margin-top: 30px ;\n\n    &:hover {\n        background-color: #e1e2ff;\n        color: #000\n    }\n`;\n_c2 = InputSubmit;\n\nconst Formulario = _ref => {\n  _s();\n\n  let {\n    setMonedas\n  } = _ref;\n  const [cripto, setCripto] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const consultarApi = async () => {\n      const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=15&tsym=USD\";\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n      const arrayCriptos = resultado.Data.map(cripto => {\n        const objeto = {\n          id: cripto.CoinInfo.Name,\n          nombre: cripto.CoinInfo.FullName\n        };\n        return objeto;\n      });\n      setCripto(arrayCriptos);\n    };\n\n    consultarApi();\n  }, []);\n  const monedas = [{\n    id: 'USD',\n    nombre: 'Dolar de EE.UU'\n  }, {\n    id: 'MXM',\n    nombre: 'Peso mexicano'\n  }, {\n    id: 'EUR',\n    nombre: 'Euro'\n  }, {\n    id: 'ARS',\n    nombre: 'Peso argentino'\n  }];\n  const [moneda, SelectMonedas] = useSelectMonedas('Elige tu moneda', monedas);\n  const [criptoMoneda, SelectCriptoMoneda] = useSelectMonedas('Elige tu criptomoneda', cripto);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if ([moneda, criptoMoneda].includes(\"\")) {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n    setMonedas({\n      monedas,\n      criptoMoneda\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(SelectMonedas, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectCriptoMoneda, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), moneda, /*#__PURE__*/_jsxDEV(InputSubmit, {\n        type: \"submit\",\n        value: \"Cotizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Todos los campos son obligatorios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(Formulario, \"HYXglNnUed2klK7SltTnAtthRn0=\", false, function () {\n  return [useSelectMonedas, useSelectMonedas];\n});\n\n_c3 = Formulario;\nexport default Formulario;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"InputSubmit\");\n$RefreshReg$(_c3, \"Formulario\");","map":{"version":3,"sources":["C:/Users/Juan/Documents/REACT/Curso React Juan de la Torre Valdez/cotizador-cripto/src/components/Formulario.jsx"],"names":["useEffect","useState","styled","useSelectMonedas","Form","form","InputSubmit","input","Formulario","setMonedas","cripto","setCripto","error","setError","consultarApi","url","respuesta","fetch","resultado","json","arrayCriptos","Data","map","objeto","id","CoinInfo","Name","nombre","FullName","monedas","moneda","SelectMonedas","criptoMoneda","SelectCriptoMoneda","handleSubmit","e","preventDefault","includes"],"mappings":"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","sourcesContent":["import {useEffect , useState} from 'react'\r\nimport styled from '@emotion/styled';\r\nimport useSelectMonedas from '../hooks/useSelectMonedas';\r\n\r\n\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n`\r\n\r\nconst InputSubmit = styled.input`\r\n    background-color: #9497ff;\r\n    border: none;\r\n    width: 300px;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    transition: all 0.5s;\r\n    margin-top: 30px ;\r\n\r\n    &:hover {\r\n        background-color: #e1e2ff;\r\n        color: #000\r\n    }\r\n`\r\n\r\nconst Formulario = ({setMonedas}) => {\r\n\r\n    const [cripto , setCripto] = useState([])\r\n    const [error , setError] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        const consultarApi = async() => {\r\n              const url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=15&tsym=USD\"\r\n              const respuesta = await fetch(url)\r\n              const resultado = await respuesta.json()\r\n             \r\n              const arrayCriptos = resultado.Data.map( (cripto) => {\r\n\r\n                    const objeto = {\r\n                        id: cripto.CoinInfo.Name,\r\n                        nombre: cripto.CoinInfo.FullName\r\n                    }\r\n                    return objeto\r\n              })\r\n              setCripto(arrayCriptos)\r\n             \r\n            }\r\n            consultarApi()\r\n    }, [])\r\n    \r\n\r\n    const monedas = [\r\n        { id: 'USD' , nombre: 'Dolar de EE.UU'},\r\n        { id: 'MXM' , nombre: 'Peso mexicano'},\r\n        { id: 'EUR' , nombre: 'Euro'},\r\n        { id: 'ARS' , nombre: 'Peso argentino'},\r\n    ]\r\n   \r\n    const [ moneda, SelectMonedas ] = useSelectMonedas('Elige tu moneda', monedas)\r\n    const [ criptoMoneda, SelectCriptoMoneda ] = useSelectMonedas('Elige tu criptomoneda', cripto)\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      if([moneda , criptoMoneda].includes(\"\")) {\r\n          setError(true)\r\n          return;\r\n      }\r\n\r\n      setError(false)\r\n      setMonedas({\r\n          monedas, \r\n          criptoMoneda\r\n      })\r\n    }\r\n   \r\n   \r\n  return (\r\n      <>\r\n        \r\n         <Form\r\n          onSubmit={handleSubmit}\r\n         >\r\n                <SelectMonedas />\r\n                <SelectCriptoMoneda />\r\n\r\n                {moneda}\r\n              \r\n                <InputSubmit\r\n                 type=\"submit\"\r\n                 value= \"Cotizar\"\r\n                  />\r\n\r\n         { error && <p className='error'>Todos los campos son obligatorios</p>}\r\n\r\n         </Form>\r\n      \r\n      \r\n      </>\r\n  )\r\n}\r\n\r\nexport default Formulario"]},"metadata":{},"sourceType":"module"}